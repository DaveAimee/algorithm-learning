package chapter2_dsu.excersice;

import static org.junit.Assert.assertEquals;

import org.junit.Test;

public class MinimizeMalwareSpreadTest {
    @Test
    public void testMinMalwareSpread() {
        MinimizeMalwareSpread sol = new MinimizeMalwareSpread();
        assertEquals(0,
                sol.minMalwareSpread(new int[][] { { 1, 1, 0 }, { 1, 1, 0 }, { 0, 0, 1 } }, new int[] { 0, 1 }));
        assertEquals(1,
                sol.minMalwareSpread(new int[][] { { 1, 1, 1 }, { 1, 1, 1 }, { 1, 1, 1 } }, new int[] { 1, 2 }));
        assertEquals(3,
                sol.minMalwareSpread(
                        new int[][] { { 1, 1, 0, 0, 0, 0 }, { 1, 1, 1, 0, 0, 0 }, { 0, 1, 1, 0, 0, 0 },
                                { 0, 0, 0, 1, 1, 1 }, { 0, 0, 0, 1, 1, 1 }, { 0, 0, 0, 1, 1, 1 } },
                        new int[] { 2, 3 }));
        assertEquals(2,
                sol.minMalwareSpread(
                        new int[][] { { 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1 }, { 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0 },
                                { 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0 }, { 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0 },
                                { 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 }, { 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0 },
                                { 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0 }, { 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0 },
                                { 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0 }, { 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0 },
                                { 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 } },

                        new int[] { 7, 8, 6, 2, 3 }));
    }
}
